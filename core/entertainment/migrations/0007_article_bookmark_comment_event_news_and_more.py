# Generated by Django 5.1.7 on 2025-03-23 21:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('entertainment', '0006_eventsmodel_date_created'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('read_time', models.CharField(blank=True, editable=False, max_length=50)),
                ('excerpt', models.TextField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(null=True, upload_to='uploads/')),
                ('category', models.CharField(choices=[('all', 'All'), ('student', 'Student'), ('life', 'Life'), ('campus', 'Campus Life'), ('travel', 'Travel'), ('advice', 'Advice')], default='all', max_length=50)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('slug', models.SlugField(blank=True, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='uploads/events/')),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('read_time', models.CharField(blank=True, editable=False, max_length=50)),
                ('excerpt', models.TextField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=50)),
                ('image', models.ImageField(null=True, upload_to='uploads/news/')),
                ('likes', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='articlelikes',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='articlelikes',
            name='article',
        ),
        migrations.RemoveField(
            model_name='articlelikes',
            name='user',
        ),
        migrations.RemoveField(
            model_name='articlesmodel',
            name='author',
        ),
        migrations.RemoveField(
            model_name='comments',
            name='article',
        ),
        migrations.AlterUniqueTogether(
            name='commentlike',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='commentlike',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='commentlike',
            name='user',
        ),
        migrations.RemoveField(
            model_name='comments',
            name='user',
        ),
        migrations.DeleteModel(
            name='eventsModel',
        ),
        migrations.DeleteModel(
            name='NewsArticle',
        ),
        migrations.DeleteModel(
            name='articleLikes',
        ),
        migrations.DeleteModel(
            name='articlesModel',
        ),
        migrations.DeleteModel(
            name='commentLike',
        ),
        migrations.DeleteModel(
            name='comments',
        ),
    ]
